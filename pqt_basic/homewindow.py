
import datetime as dt
from second_window import Ui_second_window
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QInputDialog,QLineEdit,QFileDialog,QMessageBox


class Ui_home_window(object):
    def data_window(self):
        self.window=QtWidgets.QMainWindow()
        self.ui = Ui_second_window()
        self.ui.setupUi(self.window)
        self.window.show()

    def setupUi(self, home_window):
        home_window.setObjectName("home_window")
        home_window.resize(1080, 783)
        home_window.setFocusPolicy(QtCore.Qt.NoFocus)
        home_window.setAutoFillBackground(False)
        home_window.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 170, 255);")
        self.centralwidget = QtWidgets.QWidget(home_window)
        self.centralwidget.setObjectName("centralwidget")
        self.big_window_frame = QtWidgets.QFrame(self.centralwidget)
        self.big_window_frame.setGeometry(QtCore.QRect(200, 0, 880, 511))
        self.big_window_frame.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.big_window_frame.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 170, 255);")
        self.big_window_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.big_window_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.big_window_frame.setObjectName("big_window_frame")
        self.groupBox = QtWidgets.QGroupBox(self.big_window_frame)
        self.groupBox.setGeometry(QtCore.QRect(120, 20, 630, 30))
        self.groupBox.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.diagnosticBN = QtWidgets.QPushButton(self.groupBox)
        self.diagnosticBN.setGeometry(QtCore.QRect(0, 0, 210, 30))
        self.diagnosticBN.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.diagnosticBN.setStyleSheet("font: 87 12pt \"Arial\";\n"
"border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.diagnosticBN.setObjectName("diagnosticBN")
        self.flashBN = QtWidgets.QPushButton(self.groupBox)
        self.flashBN.setGeometry(QtCore.QRect(210, 0, 210, 30))
        self.flashBN.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.flashBN.setStyleSheet("font: 87 12pt \"Arial\";\n"
"border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.flashBN.setObjectName("flashBN")
        self.self_testBN = QtWidgets.QPushButton(self.groupBox)
        self.self_testBN.setGeometry(QtCore.QRect(420, 0, 210, 30))
        self.self_testBN.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.self_testBN.setStyleSheet("font: 87 12pt \"Arial\";\n"
"border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.self_testBN.setObjectName("self_testBN")
        self.file_name = QtWidgets.QLineEdit(self.big_window_frame)
        self.file_name.setEnabled(False)
        self.file_name.setGeometry(QtCore.QRect(30, 100, 291, 31))
        self.file_name.setAccessibleName("")
        self.file_name.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 12pt \"Arial\";")
        self.file_name.setInputMask("")
        self.file_name.setText("")
        self.file_name.setObjectName("file_name")
        self.browseBN = QtWidgets.QPushButton(self.big_window_frame)
        self.browseBN.setEnabled(False)
        self.browseBN.setGeometry(QtCore.QRect(340, 100, 93, 28))
        self.browseBN.setStyleSheet("background-color: rgb(255, 170, 127);\n"
"color: rgb(170, 0, 0);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.browseBN.setFlat(False)
        self.browseBN.setObjectName("browseBN")
        self.outputWD = QtWidgets.QLineEdit(self.big_window_frame)
        self.outputWD.setEnabled(True)
        self.outputWD.setGeometry(QtCore.QRect(30, 460, 291, 40))
        self.outputWD.setAccessibleName("")
        self.outputWD.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.outputWD.setText("")
        self.outputWD.setObjectName("outputWD")
        self.transmitBN = QtWidgets.QPushButton(self.big_window_frame)
        self.transmitBN.setEnabled(True)
        self.transmitBN.setGeometry(QtCore.QRect(340, 460, 93, 40))
        self.transmitBN.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 0, 0);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.transmitBN.setFlat(False)
        self.transmitBN.setObjectName("transmitBN")
        self.left_window_fame = QtWidgets.QFrame(self.centralwidget)
        self.left_window_fame.setGeometry(QtCore.QRect(0, 0, 205, 510))
        self.left_window_fame.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.left_window_fame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.left_window_fame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.left_window_fame.setObjectName("left_window_fame")
        self.selectLB = QtWidgets.QLabel(self.left_window_fame)
        self.selectLB.setGeometry(QtCore.QRect(20, 20, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.selectLB.setFont(font)
        self.selectLB.setWhatsThis("")
        self.selectLB.setStyleSheet("font: 75 14pt \"Arial\";\n"
"background-color: rgb(170, 170, 255);\n"
"border-color: rgb(0, 0, 0);")
        self.selectLB.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.selectLB.setLineWidth(1)
        self.selectLB.setMidLineWidth(0)
        self.selectLB.setScaledContents(True)
        self.selectLB.setWordWrap(False)
        self.selectLB.setObjectName("selectLB")
        self.option1LB = QtWidgets.QCheckBox(self.left_window_fame)
        self.option1LB.setGeometry(QtCore.QRect(40, 100, 130, 30))
        self.option1LB.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.option1LB.setStyleSheet("font: 87 10pt \"Arial\";\n"
"border-color: rgb(170, 0, 0);\n"
"background-color: rgb(255, 229, 230);")
        self.option1LB.setObjectName("option1LB")
        self.option2LB = QtWidgets.QCheckBox(self.left_window_fame)
        self.option2LB.setGeometry(QtCore.QRect(40, 170, 130, 30))
        self.option2LB.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.option2LB.setStyleSheet("font: 87 10pt \"Arial\";\n"
"border-color: rgb(170, 0, 0);\n"
"background-color: rgb(255, 229, 230);")
        self.option2LB.setObjectName("option2LB")
        self.option3LB = QtWidgets.QCheckBox(self.left_window_fame)
        self.option3LB.setGeometry(QtCore.QRect(40, 240, 130, 30))
        self.option3LB.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.option3LB.setStyleSheet("font: 87 10pt \"Arial\";\n"
"border-color: rgb(170, 0, 0);\n"
"background-color: rgb(255, 229, 230);")
        self.option3LB.setObjectName("option3LB")
        self.option4LB = QtWidgets.QCheckBox(self.left_window_fame)
        self.option4LB.setGeometry(QtCore.QRect(40, 310, 130, 30))
        self.option4LB.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.option4LB.setStyleSheet("font: 87 10pt \"Arial\";\n"
"border-color: rgb(170, 0, 0);\n"
"background-color: rgb(255, 229, 230);")
        self.option4LB.setObjectName("option4LB")
        self.pushButton = QtWidgets.QPushButton(self.left_window_fame)
        self.pushButton.setGeometry(QtCore.QRect(30, 390, 140, 30))
        self.pushButton.setStyleSheet("font: 87 16pt \"Arial Black\";\n"
"background-color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.vline1 = QtWidgets.QFrame(self.centralwidget)
        self.vline1.setGeometry(QtCore.QRect(207, 0, 5, 510))
        self.vline1.setCursor(QtGui.QCursor(QtCore.Qt.SplitHCursor))
        self.vline1.setMouseTracking(False)
        self.vline1.setStyleSheet("")
        self.vline1.setLineWidth(2)
        self.vline1.setFrameShape(QtWidgets.QFrame.VLine)
        self.vline1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.vline1.setObjectName("vline1")
        self.hline1 = QtWidgets.QFrame(self.centralwidget)
        self.hline1.setGeometry(QtCore.QRect(0, 512, 1080, 5))
        self.hline1.setCursor(QtGui.QCursor(QtCore.Qt.SplitVCursor))
        self.hline1.setLineWidth(2)
        self.hline1.setFrameShape(QtWidgets.QFrame.HLine)
        self.hline1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.hline1.setObjectName("hline1")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(-10, 510, 1090, 61))
        self.tableWidget.setStyleSheet("color: rgb(255, 0, 0);\n"
"background-color: rgb(225, 225, 225);")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 3, item)
        home_window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(home_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1080, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuTheme = QtWidgets.QMenu(self.menuView)
        self.menuTheme.setObjectName("menuTheme")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        home_window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(home_window)
        self.statusbar.setObjectName("statusbar")
        home_window.setStatusBar(self.statusbar)
        self.newLB = QtWidgets.QAction(home_window)
        self.newLB.setEnabled(True)
        font = QtGui.QFont()
        self.newLB.setFont(font)
        self.newLB.setObjectName("newLB")
        self.openLB = QtWidgets.QAction(home_window)
        self.openLB.setObjectName("openLB")
        self.saveLB = QtWidgets.QAction(home_window)
        self.saveLB.setObjectName("saveLB")
        self.save_asLB = QtWidgets.QAction(home_window)
        self.save_asLB.setObjectName("save_asLB")
        self.copyLB = QtWidgets.QAction(home_window)
        self.copyLB.setObjectName("copyLB")
        self.actionPaste = QtWidgets.QAction(home_window)
        self.actionPaste.setObjectName("actionPaste")
        self.darkLB = QtWidgets.QAction(home_window)
        self.darkLB.setCheckable(True)
        self.darkLB.setObjectName("darkLB")
        self.lightLB = QtWidgets.QAction(home_window)
        self.lightLB.setCheckable(True)
        self.lightLB.setObjectName("lightLB")
        self.defaultLB = QtWidgets.QAction(home_window)
        self.defaultLB.setCheckable(True)
        self.defaultLB.setObjectName("defaultLB")
        self.tool1LB = QtWidgets.QAction(home_window)
        self.tool1LB.setObjectName("tool1LB")
        self.tool2LB = QtWidgets.QAction(home_window)
        self.tool2LB.setObjectName("tool2LB")
        self.tool3LB = QtWidgets.QAction(home_window)
        self.tool3LB.setObjectName("tool3LB")
        self.new_windowLB = QtWidgets.QAction(home_window)
        self.new_windowLB.setObjectName("new_windowLB")
        self.menuFile.addAction(self.newLB)
        self.menuFile.addAction(self.openLB)
        self.menuFile.addAction(self.saveLB)
        self.menuFile.addAction(self.save_asLB)
        self.menuFile.addAction(self.new_windowLB)
        self.menuEdit.addAction(self.copyLB)
        self.menuEdit.addAction(self.actionPaste)
        self.menuTheme.addAction(self.darkLB)
        self.menuTheme.addAction(self.lightLB)
        self.menuTheme.addAction(self.defaultLB)
        self.menuView.addAction(self.menuTheme.menuAction())
        self.menuTools.addAction(self.tool1LB)
        self.menuTools.addAction(self.tool2LB)
        self.menuTools.addAction(self.tool3LB)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.browseBN.close()
        self.file_name.close()
        self.outputWD.close()
        self.transmitBN.close()
        self.diagnosticBN.clicked.connect(self.make_enable)
        self.browseBN.clicked.connect(self.choose_file)

        self.retranslateUi(home_window)
        QtCore.QMetaObject.connectSlotsByName(home_window)

    def make_enable(self):
        self.browseBN.setEnabled(True)
        self.browseBN.show()
        self.file_name.show()
        self.diagnosticBN.setStyleSheet("background-color: rgb(0, 85, 225)")
        

    def choose_file(self):
        self.browseBN.setStyleSheet("background-color: rgb(0, 85, 225)")
        self.file_name.setEnabled(True)
        filename=QFileDialog.getOpenFileName(None,"Open file"," ", "Text files(*.txt*)")
        nfile=filename[0].split("/")
        self.file_name.setText("UDS CAN "+"("+nfile[-1]+")")
        self.data_window()
        self.data_fill(filename[0])
        self.ui.treeWidget.itemDoubleClicked.connect(self.select_data)
        self.transmitBN.clicked.connect(self.transmit_data)
        
    def data_fill(self, path):
        data_file=open(path, "r")
        i=0
        for word in data_file.readlines():
        
            data=word.strip().split(",")
            data_len=len(data)
            for j in range(data_len):
                if j==0:
                    self.ui.treeWidget.topLevelItem(i).setText(0,data[j])
                    
                else:
                    self.ui.treeWidget.topLevelItem(i).child(j-1).setText(0,data[j])
                    
            i=i+1

    def select_data(self):
        self.outputWD.show()
        self.transmitBN.show()
        content=self.ui.treeWidget.currentItem()
        self.outputWD.setText(content.text(0))

    def transmit_data(self):
        
        sys_time=dt.datetime.now()
        self.tableWidget.setItem(0,0,QtWidgets.QTableWidgetItem(str(sys_time.strftime("    %H:%M"))))
        self.tableWidget.setItem(0,1,QtWidgets.QTableWidgetItem("    0X700"))
        self.tableWidget.setItem(0,2,QtWidgets.QTableWidgetItem("    800"))
        self.tableWidget.setItem(0,3,QtWidgets.QTableWidgetItem("    1000"))
        msg=QMessageBox()
        msg.setWindowTitle("Status")
        msg.setText("Yor data key is transmited      ")
        msg.setIcon(QMessageBox.Information)
        x=msg.exec_()
        

    def retranslateUi(self, home_window):
        _translate = QtCore.QCoreApplication.translate
        home_window.setWindowTitle(_translate("home_window", "Demowindow"))
        self.diagnosticBN.setText(_translate("home_window", "Diagnostic Services"))
        self.flashBN.setText(_translate("home_window", "Flash Programming"))
        self.self_testBN.setText(_translate("home_window", "Self test DIDs"))
        self.browseBN.setText(_translate("home_window", "Browse..."))
        self.transmitBN.setText(_translate("home_window", "Transmit"))
        self.selectLB.setText(_translate("home_window", "<html><head/><body><p>Select Protocol</p></body></html>"))
        self.option1LB.setText(_translate("home_window", " Option 1"))
        self.option2LB.setText(_translate("home_window", " Option 2"))
        self.option3LB.setText(_translate("home_window", " Option 3"))
        self.option4LB.setText(_translate("home_window", " Option 4"))
        self.pushButton.setText(_translate("home_window", "Connect"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("home_window", "System time"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("home_window", "CAN id"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("home_window", "Tx"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("home_window", "Rx"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("home_window", ""))
        item = self.tableWidget.item(0, 1)
        item.setText(_translate("home_window", ""))
        item = self.tableWidget.item(0, 2)
        item.setText(_translate("home_window", ""))
        item = self.tableWidget.item(0, 3)
        item.setText(_translate("home_window", ""))
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.menuFile.setTitle(_translate("home_window", "File"))
        self.menuEdit.setTitle(_translate("home_window", "Edit"))
        self.menuView.setTitle(_translate("home_window", "View"))
        self.menuTheme.setTitle(_translate("home_window", "Theme"))
        self.menuTools.setTitle(_translate("home_window", "Tools"))
        self.menuHelp.setTitle(_translate("home_window", "Help"))
        self.newLB.setText(_translate("home_window", "New"))
        self.newLB.setToolTip(_translate("home_window", "New"))
        self.newLB.setWhatsThis(_translate("home_window", "Cteart a file"))
        self.newLB.setShortcut(_translate("home_window", "Ctrl+N"))
        self.openLB.setText(_translate("home_window", "Open"))
        self.openLB.setWhatsThis(_translate("home_window", "Open a file"))
        self.openLB.setShortcut(_translate("home_window", "Ctrl+O"))
        self.saveLB.setText(_translate("home_window", "Save"))
        self.saveLB.setShortcut(_translate("home_window", "Ctrl+S"))
        self.save_asLB.setText(_translate("home_window", "Save as"))
        self.save_asLB.setShortcut(_translate("home_window", "Ctrl+Shift+S"))
        self.copyLB.setText(_translate("home_window", "Copy"))
        self.copyLB.setShortcut(_translate("home_window", "Ctrl+C"))
        self.actionPaste.setText(_translate("home_window", "Paste"))
        self.actionPaste.setShortcut(_translate("home_window", "Ctrl+V"))
        self.darkLB.setText(_translate("home_window", "Dark"))
        self.lightLB.setText(_translate("home_window", "Light"))
        self.defaultLB.setText(_translate("home_window", "Default"))
        self.tool1LB.setText(_translate("home_window", "Tool 1"))
        self.tool2LB.setText(_translate("home_window", "Tool 2"))
        self.tool3LB.setText(_translate("home_window", "Tool 3"))
        self.new_windowLB.setText(_translate("home_window", "New window"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    home_window = QtWidgets.QMainWindow()
    ui = Ui_home_window()
    ui.setupUi(home_window)
    home_window.show()
    sys.exit(app.exec_())
